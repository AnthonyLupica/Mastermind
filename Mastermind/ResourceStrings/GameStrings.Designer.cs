//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mastermind.ResourceStrings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class GameStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GameStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mastermind.ResourceStrings.GameStrings", typeof(GameStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Thanks for playing!!!
        ///.
        /// </summary>
        internal static string Exit {
            get {
                return ResourceManager.GetString("Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feedback: {0}
        ///.
        /// </summary>
        internal static string Feedback {
            get {
                return ResourceManager.GetString("Feedback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///For each digit in your guess that matches the number and position
        ///of a digit in the secret code, my feedback includes one plus (+) sign. 
        ///
        ///For each digit in your guess that matches the number but not the position
        ///of a digit in the secret code, my feedback includes one minus (-) sign.
        ///
        ///All (+&apos;s) are scored for feedback in a guess before a single (-) is scored.
        ///
        ///Each digit comprising the secret code will only be used for scoring once per feedback.
        ///Ex) guess &quot;2223&quot; for a secret code of &quot;3232&quot; prod [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the &quot;Mastermind Challenge&quot;, where your wits will be put to the test. 
        ///See if you can decipher my secret code before time runs out!
        ///.
        /// </summary>
        internal static string Introduction {
            get {
                return ResourceManager.GetString("Introduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Try again? 
        ///Press (N) to quit or any other key to give it another go with a new secret code: .
        /// </summary>
        internal static string KeepPlayingLost {
            get {
                return ResourceManager.GetString("KeepPlayingLost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///I have rarely known defeat. It seems you are something of a mastermind yourself.
        ///Press (N) to quit or any other key to continue playing:.
        /// </summary>
        internal static string KeepPlayingWon {
            get {
                return ResourceManager.GetString("KeepPlayingWon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press any key to continue ...  .
        /// </summary>
        internal static string Prompt_AnyKeyContinue {
            get {
                return ResourceManager.GetString("Prompt_AnyKeyContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Guess {0} of {1}] =&gt; .
        /// </summary>
        internal static string Prompt_Guess {
            get {
                return ResourceManager.GetString("Prompt_Guess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Need to see the rules? 
        ///Press (Y) to view them, or any other key to continue: .
        /// </summary>
        internal static string Prompt_Help {
            get {
                return ResourceManager.GetString("Prompt_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///I have generated a new secret code which is:                                                  
        ///   - {0} digits long                                                                                    
        ///   - Composed only of numbers in the range [{1}, {2}]
        ///                                                                                                                     
        ///One question remains ... Can you break the code within {3} guesses?
        ///.
        /// </summary>
        internal static string RoundStart {
            get {
                return ResourceManager.GetString("RoundStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No guess attempt has been expended.
        ///.
        /// </summary>
        internal static string Validation_ConfirmGuessNotTaken {
            get {
                return ResourceManager.GetString("Validation_ConfirmGuessNotTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your guess contains numbers that are out of range ... Recall the secet code contains only numbers in the range [{0}, {1}]..
        /// </summary>
        internal static string Validation_DigitNotInSecretCharSet {
            get {
                return ResourceManager.GetString("Validation_DigitNotInSecretCharSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your guess was empty ... You cannot run from the Mastermind!.
        /// </summary>
        internal static string Validation_EmptyGuess {
            get {
                return ResourceManager.GetString("Validation_EmptyGuess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your guess contains non-digit characters ... You cannot fool the Mastermind so easily!.
        /// </summary>
        internal static string Validation_NonDigit {
            get {
                return ResourceManager.GetString("Validation_NonDigit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your guess is not equal in length with the secret code I have generated ... Recall the secret code is of length {0}..
        /// </summary>
        internal static string Validation_SecretLength {
            get {
                return ResourceManager.GetString("Validation_SecretLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You lose :(
        ///The secret code was {0}.
        /// </summary>
        internal static string YouLose {
            get {
                return ResourceManager.GetString("YouLose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You solved it!.
        /// </summary>
        internal static string YouSolvedIt {
            get {
                return ResourceManager.GetString("YouSolvedIt", resourceCulture);
            }
        }
    }
}
